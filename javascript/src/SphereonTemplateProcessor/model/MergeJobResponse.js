/**
 * OfficeTextMerge
 * <b>The Office Text API can generate office documents from a template and a JSON data file<</b>    The flow is generally as follows:      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['SphereonTemplateProcessor/ApiClient', 'SphereonTemplateProcessor/model/MergeJob'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MergeJob'));
  } else {
    // Browser globals (root is window)
    if (!root.OfficeTextMerge) {
      root.OfficeTextMerge = {};
    }
    root.OfficeTextMerge.MergeJobResponse = factory(root.OfficeTextMerge.ApiClient, root.OfficeTextMerge.MergeJob);
  }
}(this, function(ApiClient, MergeJob) {
  'use strict';




  /**
   * The MergeJobResponse model module.
   * @module SphereonTemplateProcessor/model/MergeJobResponse
   * @version 0.1
   */

  /**
   * Constructs a new <code>MergeJobResponse</code>.
   * The merge job response.
   * @alias module:SphereonTemplateProcessor/model/MergeJobResponse
   * @class
   * @param jobId {String} The server generated job jobId. This jobId is checked against the jobId in the request path on overy invocation
   * @param status {module:SphereonTemplateProcessor/model/MergeJobResponse.StatusEnum} The status of the job
   */
  var exports = function(jobId, status) {
    var _this = this;

    _this['jobId'] = jobId;


    _this['status'] = status;
  };

  /**
   * Constructs a <code>MergeJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:SphereonTemplateProcessor/model/MergeJobResponse} obj Optional instance to populate.
   * @return {module:SphereonTemplateProcessor/model/MergeJobResponse} The populated <code>MergeJobResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('jobId')) {
        obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
      }
      if (data.hasOwnProperty('job')) {
        obj['job'] = MergeJob.constructFromObject(data['job']);
      }
      if (data.hasOwnProperty('statusMessage')) {
        obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
    }
    return obj;
  }

  /**
   * The server generated job jobId. This jobId is checked against the jobId in the request path on overy invocation
   * @member {String} jobId
   */
  exports.prototype['jobId'] = undefined;
  /**
   * @member {module:SphereonTemplateProcessor/model/MergeJob} job
   */
  exports.prototype['job'] = undefined;
  /**
   * A status message, which can be informational, warning or error. AA message here does not indicate an error perse
   * @member {String} statusMessage
   */
  exports.prototype['statusMessage'] = undefined;
  /**
   * The status of the job
   * @member {module:SphereonTemplateProcessor/model/MergeJobResponse.StatusEnum} status
   */
  exports.prototype['status'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",
    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",
    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",
    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE",
    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",
    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED"  };


  return exports;
}));


