/**
 * Template-Processor
 * <b>The Template-Processor API can generate office, xml and json documents from a template and a JSON data file. Supported templates are MS Office files and freemarker files.<</b>    The flow is generally as follows:      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['SphereonTemplateProcessor/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TemplateProcessor) {
      root.TemplateProcessor = {};
    }
    root.TemplateProcessor.OutputSettings = factory(root.TemplateProcessor.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The OutputSettings model module.
   * @module SphereonTemplateProcessor/model/OutputSettings
   * @version 0.1
   */

  /**
   * Constructs a new <code>OutputSettings</code>.
   * Output settings
   * @alias module:SphereonTemplateProcessor/model/OutputSettings
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>OutputSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:SphereonTemplateProcessor/model/OutputSettings} obj Optional instance to populate.
   * @return {module:SphereonTemplateProcessor/model/OutputSettings} The populated <code>OutputSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('deliveryFormat')) {
        obj['deliveryFormat'] = ApiClient.convertToType(data['deliveryFormat'], 'String');
      }
      if (data.hasOwnProperty('outputFormat')) {
        obj['outputFormat'] = ApiClient.convertToType(data['outputFormat'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:SphereonTemplateProcessor/model/OutputSettings.DeliveryFormatEnum} deliveryFormat
   */
  exports.prototype['deliveryFormat'] = undefined;
  /**
   * @member {module:SphereonTemplateProcessor/model/OutputSettings.OutputFormatEnum} outputFormat
   */
  exports.prototype['outputFormat'] = undefined;


  /**
   * Allowed values for the <code>deliveryFormat</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeliveryFormatEnum = {
    /**
     * value: "PLAIN"
     * @const
     */
    "PLAIN": "PLAIN",
    /**
     * value: "ZIP"
     * @const
     */
    "ZIP": "ZIP",
    /**
     * value: "_7ZIP"
     * @const
     */
    "_7ZIP": "_7ZIP"  };

  /**
   * Allowed values for the <code>outputFormat</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OutputFormatEnum = {
    /**
     * value: "DOC"
     * @const
     */
    "DOC": "DOC",
    /**
     * value: "DOCX"
     * @const
     */
    "DOCX": "DOCX",
    /**
     * value: "RTF"
     * @const
     */
    "RTF": "RTF",
    /**
     * value: "PDF"
     * @const
     */
    "PDF": "PDF",
    /**
     * value: "XPS"
     * @const
     */
    "XPS": "XPS",
    /**
     * value: "SVG"
     * @const
     */
    "SVG": "SVG",
    /**
     * value: "HTML"
     * @const
     */
    "HTML": "HTML",
    /**
     * value: "ODT"
     * @const
     */
    "ODT": "ODT",
    /**
     * value: "TIFF"
     * @const
     */
    "TIFF": "TIFF",
    /**
     * value: "PNG"
     * @const
     */
    "PNG": "PNG",
    /**
     * value: "BMP"
     * @const
     */
    "BMP": "BMP",
    /**
     * value: "JPEG"
     * @const
     */
    "JPEG": "JPEG",
    /**
     * value: "TXT"
     * @const
     */
    "TXT": "TXT",
    /**
     * value: "XML"
     * @const
     */
    "XML": "XML",
    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON",
    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT"  };


  return exports;
}));


