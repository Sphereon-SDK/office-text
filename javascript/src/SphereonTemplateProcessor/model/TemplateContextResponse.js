/**
 * OfficeTextMerge
 * <b>The Office Text API can generate office documents from a template and a JSON data file<</b>    The flow is generally as follows:      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['SphereonTemplateProcessor/ApiClient', 'SphereonTemplateProcessor/model/TemplateContext'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TemplateContext'));
  } else {
    // Browser globals (root is window)
    if (!root.OfficeTextMerge) {
      root.OfficeTextMerge = {};
    }
    root.OfficeTextMerge.TemplateContextResponse = factory(root.OfficeTextMerge.ApiClient, root.OfficeTextMerge.TemplateContext);
  }
}(this, function(ApiClient, TemplateContext) {
  'use strict';




  /**
   * The TemplateContextResponse model module.
   * @module SphereonTemplateProcessor/model/TemplateContextResponse
   * @version 0.1
   */

  /**
   * Constructs a new <code>TemplateContextResponse</code>.
   * The merge template response.
   * @alias module:SphereonTemplateProcessor/model/TemplateContextResponse
   * @class
   * @param id {String} Unique template context id
   * @param status {module:SphereonTemplateProcessor/model/TemplateContextResponse.StatusEnum} The status of the template
   */
  var exports = function(id, status) {
    var _this = this;



    _this['id'] = id;
    _this['status'] = status;
  };

  /**
   * Constructs a <code>TemplateContextResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:SphereonTemplateProcessor/model/TemplateContextResponse} obj Optional instance to populate.
   * @return {module:SphereonTemplateProcessor/model/TemplateContextResponse} The populated <code>TemplateContextResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('creationTime')) {
        obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
      }
      if (data.hasOwnProperty('context')) {
        obj['context'] = TemplateContext.constructFromObject(data['context']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
    }
    return obj;
  }

  /**
   * The creation date/time of this response in ISO 8601 format
   * @member {Date} creationTime
   */
  exports.prototype['creationTime'] = undefined;
  /**
   * @member {module:SphereonTemplateProcessor/model/TemplateContext} context
   */
  exports.prototype['context'] = undefined;
  /**
   * Unique template context id
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The status of the template
   * @member {module:SphereonTemplateProcessor/model/TemplateContextResponse.StatusEnum} status
   */
  exports.prototype['status'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",
    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",
    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED",
    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING"  };


  return exports;
}));


