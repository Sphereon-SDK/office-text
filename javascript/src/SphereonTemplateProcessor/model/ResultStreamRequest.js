/**
 * Template-Processor
 * <b>The Template-Processor API can generate office, xml and json documents from a template and a JSON data file. Supported templates are MS Office files and freemarker files.<</b>    The flow is generally as follows:      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['SphereonTemplateProcessor/ApiClient', 'SphereonTemplateProcessor/model/OutputSettings', 'SphereonTemplateProcessor/model/StreamLocation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./OutputSettings'), require('./StreamLocation'));
  } else {
    // Browser globals (root is window)
    if (!root.TemplateProcessor) {
      root.TemplateProcessor = {};
    }
    root.TemplateProcessor.ResultStreamRequest = factory(root.TemplateProcessor.ApiClient, root.TemplateProcessor.OutputSettings, root.TemplateProcessor.StreamLocation);
  }
}(this, function(ApiClient, OutputSettings, StreamLocation) {
  'use strict';




  /**
   * The ResultStreamRequest model module.
   * @module SphereonTemplateProcessor/model/ResultStreamRequest
   * @version 0.1
   */

  /**
   * Constructs a new <code>ResultStreamRequest</code>.
   * A request to download a specific result stream.
   * @alias module:SphereonTemplateProcessor/model/ResultStreamRequest
   * @class
   * @param streamLocation {module:SphereonTemplateProcessor/model/StreamLocation} The stream location
   */
  var exports = function(streamLocation) {
    var _this = this;

    _this['streamLocation'] = streamLocation;

  };

  /**
   * Constructs a <code>ResultStreamRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:SphereonTemplateProcessor/model/ResultStreamRequest} obj Optional instance to populate.
   * @return {module:SphereonTemplateProcessor/model/ResultStreamRequest} The populated <code>ResultStreamRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('streamLocation')) {
        obj['streamLocation'] = StreamLocation.constructFromObject(data['streamLocation']);
      }
      if (data.hasOwnProperty('outputSettings')) {
        obj['outputSettings'] = OutputSettings.constructFromObject(data['outputSettings']);
      }
    }
    return obj;
  }

  /**
   * The stream location
   * @member {module:SphereonTemplateProcessor/model/StreamLocation} streamLocation
   */
  exports.prototype['streamLocation'] = undefined;
  /**
   * The Output settings
   * @member {module:SphereonTemplateProcessor/model/OutputSettings} outputSettings
   */
  exports.prototype['outputSettings'] = undefined;



  return exports;
}));


