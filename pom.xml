<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sphereon.sdk</groupId>
	<artifactId>template-processor</artifactId>
	<packaging>jar</packaging>
	<version>0.1.1</version>
	<name>TEMPLATE PROCESSOR API SDK Generator</name>

	<properties>
		<sdk-package>com.sphereon.sdk.template-processor</sdk-package>
		<sdk-package-csharp>Sphereon.SDK.TemplateProcessor</sdk-package-csharp>
		<sdk-package-javascript>SphereonTemplateProcessor</sdk-package-javascript>
		
		<swagger-coden-maven-plugin.version>2.2.3</swagger-coden-maven-plugin.version>
	</properties>

	<profiles>
		<profile>
			<id>html-docs</id>
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->


									<!-- target to generate -->
									<language>html2</language>

									<!-- pass any necessary config options -->
									<configOptions>
										<dateLibrary>java8</dateLibrary>
									</configOptions>
									<verbose>true</verbose>
									<output>${project.basedir}/html-docs</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-html-docs</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<apiPackage>api</apiPackage>
									<modelPackage>model</modelPackage>
									<invokerPackage>${sdk-package}</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>java8-okhttp-gson</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>swagger.sdk.json</inputSpec>


									<language>java</language>

									<configOptions>
										<dateLibrary>java8</dateLibrary>
									</configOptions>

									<library>okhttp-gson</library>
									<verbose>true</verbose>
									<output>${project.basedir}/java8-okhttp-gson</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-java8</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<apiPackage>${sdk-package}.api</apiPackage>
									<modelPackage>${sdk-package}.model</modelPackage>
									<invokerPackage>${sdk-package}.handler</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>java8-jersey2</id>
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>

								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->


									<!-- target to generate -->
									<language>java</language>

									<!-- pass any necessary config options -->
									<configOptions>
										<dateLibrary>java8</dateLibrary>
									</configOptions>

									<!-- override the default library to jersey2 -->
									<library>jersey2</library>
									<verbose>true</verbose>
									<output>${project.basedir}/java8-jersey2</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-java8-jersey2</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<apiPackage>${sdk-package}.api</apiPackage>
									<modelPackage>${sdk-package}.model</modelPackage>
									<invokerPackage>${sdk-package}.handler</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>java8-retrofit2</id>
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>					
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->


									<!-- target to generate -->
									<language>java</language>

									<!-- pass any necessary config options -->
									<configOptions>
										<dateLibrary>java8</dateLibrary>
									</configOptions>

									<!-- override the default library to jersey2 -->
									<library>retrofit2</library>
									<verbose>true</verbose>
									<output>${project.basedir}/java8-retrofit2</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-java8-retrofit2</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<apiPackage>${sdk-package}.api</apiPackage>
									<modelPackage>${sdk-package}.model</modelPackage>
									<invokerPackage>${sdk-package}.handler</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>javascript</id>
			<!-- activating this one by default will break the build -->
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>

						<executions>

							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->


									<!-- target to generate -->
									<language>javascript</language>

									<!-- pass any necessary config options -->
									<configOptions>
										<dateLibrary>java8</dateLibrary>
									</configOptions>

									<verbose>true</verbose>
									<output>${project.basedir}/javascript</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-javascript</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<apiPackage>api</apiPackage>
									<modelPackage>model</modelPackage>
									<invokerPackage>${sdk-package-javascript}</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>csharp-net45</id>
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>

						<executions>

							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->

									<!-- target to generate -->
									<language>csharp</language>

									<!-- pass any necessary config options -->
									<configOptions>

										<packageCompany>Sphereon BV</packageCompany>
										<apiPackage>${sdk-package-csharp}.Api</apiPackage>
										<modelPackage>${sdk-package-csharp}.Model</modelPackage>
										<invokerPackage>${sdk-package-csharp}.Handler</invokerPackage>
										<packageName>${sdk-package-csharp}</packageName>


									</configOptions>

									<configurationFile>src/main/resources/config/csharp-net45.json</configurationFile>
									<!-- override the default library to jersey2 -->
									<!-- <library>okhttp-gson</library>
                                    -->
									<verbose>true</verbose>
									<output>${project.basedir}/csharp-net45</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-csharp-net45</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>

									<apiPackage>Api</apiPackage>
									<modelPackage>Model</modelPackage>
									<invokerPackage>Handler</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>csharp-net35</id>
			<build>
				<plugins>
					<!-- activate the plugin -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${swagger-coden-maven-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- specify the swagger yaml -->
									<inputSpec>swagger.sdk.json</inputSpec>
									<!--<inputSpec>https://store.sphereon.com/store/api-docs/admin/PDF/${api-version}</inputSpec>-->

									<!-- target to generate -->
									<language>csharp</language>

									<!-- pass any necessary config options -->
									<configOptions>

										<packageCompany>Sphereon BV</packageCompany>
										<apiPackage>${sdk-package-csharp}.Api</apiPackage>
										<modelPackage>${sdk-package-csharp}.Model</modelPackage>
										<invokerPackage>${sdk-package-csharp}.Handler</invokerPackage>
										<packageName>${sdk-package-csharp}</packageName>
										<targetFramework>v3.5</targetFramework>
									</configOptions>

									<configurationFile>src/main/resources/config/csharp-net35.json</configurationFile>
									<!-- override the default library to jersey2 -->
									<!-- <library>okhttp-gson</library>
                                    -->
									<verbose>true</verbose>
									<output>${project.basedir}/csharp-net35</output>
									<groupId>com.sphereon.sdk</groupId>
									<artifactId>template-processor-sdk-csharp-net35</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<addCompileSourceRoot>true</addCompileSourceRoot>

									<apiPackage>Api</apiPackage>
									<modelPackage>Model</modelPackage>
									<invokerPackage>Handler</invokerPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		


	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>			
		</plugins>
	</build>
</project>
