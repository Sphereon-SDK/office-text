/*
 * Template-Processor
 * <b>The Template-Processor API can generate office, xml and json documents from a template and a JSON data file. Supported templates are MS Office files and freemarker files.<</b>    The flow is generally as follows:      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.template_processor.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Output settings
 */
@ApiModel(description = "Output settings")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-20T13:28:35.968+02:00")
public class OutputSettings {
  /**
   * Gets or Sets deliveryFormat
   */
  public enum DeliveryFormatEnum {
    PLAIN("PLAIN"),
    
    ZIP("ZIP"),
    
    _7ZIP("_7ZIP");

    private String value;

    DeliveryFormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeliveryFormatEnum fromValue(String text) {
      for (DeliveryFormatEnum b : DeliveryFormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("deliveryFormat")
  private DeliveryFormatEnum deliveryFormat = null;

  /**
   * Gets or Sets outputFormat
   */
  public enum OutputFormatEnum {
    DOC("DOC"),
    
    DOCX("DOCX"),
    
    RTF("RTF"),
    
    PDF("PDF"),
    
    XPS("XPS"),
    
    SVG("SVG"),
    
    HTML("HTML"),
    
    ODT("ODT"),
    
    TIFF("TIFF"),
    
    PNG("PNG"),
    
    BMP("BMP"),
    
    JPEG("JPEG"),
    
    TXT("TXT"),
    
    XML("XML"),
    
    JSON("JSON"),
    
    DEFAULT("DEFAULT");

    private String value;

    OutputFormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OutputFormatEnum fromValue(String text) {
      for (OutputFormatEnum b : OutputFormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("outputFormat")
  private OutputFormatEnum outputFormat = null;

  public OutputSettings deliveryFormat(DeliveryFormatEnum deliveryFormat) {
    this.deliveryFormat = deliveryFormat;
    return this;
  }

   /**
   * Get deliveryFormat
   * @return deliveryFormat
  **/
  @ApiModelProperty(value = "")
  public DeliveryFormatEnum getDeliveryFormat() {
    return deliveryFormat;
  }

  public void setDeliveryFormat(DeliveryFormatEnum deliveryFormat) {
    this.deliveryFormat = deliveryFormat;
  }

  public OutputSettings outputFormat(OutputFormatEnum outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

   /**
   * Get outputFormat
   * @return outputFormat
  **/
  @ApiModelProperty(value = "")
  public OutputFormatEnum getOutputFormat() {
    return outputFormat;
  }

  public void setOutputFormat(OutputFormatEnum outputFormat) {
    this.outputFormat = outputFormat;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputSettings outputSettings = (OutputSettings) o;
    return Objects.equals(this.deliveryFormat, outputSettings.deliveryFormat) &&
        Objects.equals(this.outputFormat, outputSettings.outputFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryFormat, outputFormat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputSettings {\n");
    
    sb.append("    deliveryFormat: ").append(toIndentedString(deliveryFormat)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

